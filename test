library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.fixed_pkg.all;

entity CORDIC_processor is
generic(N : natural := 4);
port(   theta : in std_logic_vector(N-1 downto 0);
	clk, reset : in std_logic;
	cos, sin : out std_logic_vector(N-1 downto 0);
	ready : out std_logic);
end entity;

architecture version1 of CORDIC_processor is
--type ufixed is array (INTEGER range <>) of std_logic;
signal x, y, z : sfixed(1 downto -1);
signal test : boolean;
signal testy : real;
begin
x <= "101";
y <= to_sfixed(theta,y);
cos <= to_std_logic_vector(x);
z <= to_sfixed(0.1,z);
test <= x<y;
--
testy <= to_real(x);--real(to_integer(signed(theta)));
end architecture;